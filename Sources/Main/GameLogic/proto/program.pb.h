// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: program.proto

#ifndef PROTOBUF_program_2eproto__INCLUDED
#define PROTOBUF_program_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace HackersProject {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_program_2eproto();
void protobuf_AssignDesc_program_2eproto();
void protobuf_ShutdownFile_program_2eproto();

class program_data;
class program_data_effect;
class programs_stats;

enum program_data_effect_type {
  program_data_effect_type_attack = 1,
  program_data_effect_type_analyze = 2,
  program_data_effect_type_armor = 3,
  program_data_effect_type_crypt = 4,
  program_data_effect_type_detect = 5,
  program_data_effect_type_deceive = 6,
  program_data_effect_type_decoy = 7,
  program_data_effect_type_decrypt = 8,
  program_data_effect_type_evaluate = 9,
  program_data_effect_type_medic = 10,
  program_data_effect_type_relocate = 11,
  program_data_effect_type_scan = 12,
  program_data_effect_type_shield = 13,
  program_data_effect_type_slow = 14,
  program_data_effect_type_virus = 15,
  program_data_effect_type_weaken = 16
};
bool program_data_effect_type_IsValid(int value);
const program_data_effect_type program_data_effect_type_effect_type_MIN = program_data_effect_type_attack;
const program_data_effect_type program_data_effect_type_effect_type_MAX = program_data_effect_type_weaken;
const int program_data_effect_type_effect_type_ARRAYSIZE = program_data_effect_type_effect_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* program_data_effect_type_descriptor();
inline const ::std::string& program_data_effect_type_Name(program_data_effect_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    program_data_effect_type_descriptor(), value);
}
inline bool program_data_effect_type_Parse(
    const ::std::string& name, program_data_effect_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<program_data_effect_type>(
    program_data_effect_type_descriptor(), name, value);
}
// ===================================================================

class program_data_effect : public ::google::protobuf::Message {
 public:
  program_data_effect();
  virtual ~program_data_effect();

  program_data_effect(const program_data_effect& from);

  inline program_data_effect& operator=(const program_data_effect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const program_data_effect& default_instance();

  void Swap(program_data_effect* other);

  // implements Message ----------------------------------------------

  program_data_effect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const program_data_effect& from);
  void MergeFrom(const program_data_effect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HackersProject.program_data.effect_type effect = 1;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 1;
  inline ::HackersProject::program_data_effect_type effect() const;
  inline void set_effect(::HackersProject::program_data_effect_type value);

  // required int32 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::int32 val() const;
  inline void set_val(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HackersProject.program_data.effect)
 private:
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int effect_;
  ::google::protobuf::int32 val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_program_2eproto();
  friend void protobuf_AssignDesc_program_2eproto();
  friend void protobuf_ShutdownFile_program_2eproto();

  void InitAsDefaultInstance();
  static program_data_effect* default_instance_;
};
// -------------------------------------------------------------------

class program_data : public ::google::protobuf::Message {
 public:
  program_data();
  virtual ~program_data();

  program_data(const program_data& from);

  inline program_data& operator=(const program_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const program_data& default_instance();

  void Swap(program_data* other);

  // implements Message ----------------------------------------------

  program_data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const program_data& from);
  void MergeFrom(const program_data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef program_data_effect effect;

  typedef program_data_effect_type effect_type;
  static const effect_type attack = program_data_effect_type_attack;
  static const effect_type analyze = program_data_effect_type_analyze;
  static const effect_type armor = program_data_effect_type_armor;
  static const effect_type crypt = program_data_effect_type_crypt;
  static const effect_type detect = program_data_effect_type_detect;
  static const effect_type deceive = program_data_effect_type_deceive;
  static const effect_type decoy = program_data_effect_type_decoy;
  static const effect_type decrypt = program_data_effect_type_decrypt;
  static const effect_type evaluate = program_data_effect_type_evaluate;
  static const effect_type medic = program_data_effect_type_medic;
  static const effect_type relocate = program_data_effect_type_relocate;
  static const effect_type scan = program_data_effect_type_scan;
  static const effect_type shield = program_data_effect_type_shield;
  static const effect_type slow = program_data_effect_type_slow;
  static const effect_type virus = program_data_effect_type_virus;
  static const effect_type weaken = program_data_effect_type_weaken;
  static inline bool effect_type_IsValid(int value) {
    return program_data_effect_type_IsValid(value);
  }
  static const effect_type effect_type_MIN =
    program_data_effect_type_effect_type_MIN;
  static const effect_type effect_type_MAX =
    program_data_effect_type_effect_type_MAX;
  static const int effect_type_ARRAYSIZE =
    program_data_effect_type_effect_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  effect_type_descriptor() {
    return program_data_effect_type_descriptor();
  }
  static inline const ::std::string& effect_type_Name(effect_type value) {
    return program_data_effect_type_Name(value);
  }
  static inline bool effect_type_Parse(const ::std::string& name,
      effect_type* value) {
    return program_data_effect_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .HackersProject.program_data.effect effects = 3;
  inline int effects_size() const;
  inline void clear_effects();
  static const int kEffectsFieldNumber = 3;
  inline const ::HackersProject::program_data_effect& effects(int index) const;
  inline ::HackersProject::program_data_effect* mutable_effects(int index);
  inline ::HackersProject::program_data_effect* add_effects();
  inline const ::google::protobuf::RepeatedPtrField< ::HackersProject::program_data_effect >&
      effects() const;
  inline ::google::protobuf::RepeatedPtrField< ::HackersProject::program_data_effect >*
      mutable_effects();

  // @@protoc_insertion_point(class_scope:HackersProject.program_data)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::HackersProject::program_data_effect > effects_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_program_2eproto();
  friend void protobuf_AssignDesc_program_2eproto();
  friend void protobuf_ShutdownFile_program_2eproto();

  void InitAsDefaultInstance();
  static program_data* default_instance_;
};
// -------------------------------------------------------------------

class programs_stats : public ::google::protobuf::Message {
 public:
  programs_stats();
  virtual ~programs_stats();

  programs_stats(const programs_stats& from);

  inline programs_stats& operator=(const programs_stats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const programs_stats& default_instance();

  void Swap(programs_stats* other);

  // implements Message ----------------------------------------------

  programs_stats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const programs_stats& from);
  void MergeFrom(const programs_stats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HackersProject.program_data programs = 1;
  inline int programs_size() const;
  inline void clear_programs();
  static const int kProgramsFieldNumber = 1;
  inline const ::HackersProject::program_data& programs(int index) const;
  inline ::HackersProject::program_data* mutable_programs(int index);
  inline ::HackersProject::program_data* add_programs();
  inline const ::google::protobuf::RepeatedPtrField< ::HackersProject::program_data >&
      programs() const;
  inline ::google::protobuf::RepeatedPtrField< ::HackersProject::program_data >*
      mutable_programs();

  // @@protoc_insertion_point(class_scope:HackersProject.programs_stats)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HackersProject::program_data > programs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_program_2eproto();
  friend void protobuf_AssignDesc_program_2eproto();
  friend void protobuf_ShutdownFile_program_2eproto();

  void InitAsDefaultInstance();
  static programs_stats* default_instance_;
};
// ===================================================================


// ===================================================================

// program_data_effect

// required .HackersProject.program_data.effect_type effect = 1;
inline bool program_data_effect::has_effect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void program_data_effect::set_has_effect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void program_data_effect::clear_has_effect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void program_data_effect::clear_effect() {
  effect_ = 1;
  clear_has_effect();
}
inline ::HackersProject::program_data_effect_type program_data_effect::effect() const {
  return static_cast< ::HackersProject::program_data_effect_type >(effect_);
}
inline void program_data_effect::set_effect(::HackersProject::program_data_effect_type value) {
  assert(::HackersProject::program_data_effect_type_IsValid(value));
  set_has_effect();
  effect_ = value;
}

// required int32 val = 2;
inline bool program_data_effect::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void program_data_effect::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void program_data_effect::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void program_data_effect::clear_val() {
  val_ = 0;
  clear_has_val();
}
inline ::google::protobuf::int32 program_data_effect::val() const {
  return val_;
}
inline void program_data_effect::set_val(::google::protobuf::int32 value) {
  set_has_val();
  val_ = value;
}

// -------------------------------------------------------------------

// program_data

// required string name = 1;
inline bool program_data::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void program_data::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void program_data::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void program_data::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& program_data::name() const {
  return *name_;
}
inline void program_data::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void program_data::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void program_data::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* program_data::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* program_data::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void program_data::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .HackersProject.program_data.effect effects = 3;
inline int program_data::effects_size() const {
  return effects_.size();
}
inline void program_data::clear_effects() {
  effects_.Clear();
}
inline const ::HackersProject::program_data_effect& program_data::effects(int index) const {
  return effects_.Get(index);
}
inline ::HackersProject::program_data_effect* program_data::mutable_effects(int index) {
  return effects_.Mutable(index);
}
inline ::HackersProject::program_data_effect* program_data::add_effects() {
  return effects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HackersProject::program_data_effect >&
program_data::effects() const {
  return effects_;
}
inline ::google::protobuf::RepeatedPtrField< ::HackersProject::program_data_effect >*
program_data::mutable_effects() {
  return &effects_;
}

// -------------------------------------------------------------------

// programs_stats

// repeated .HackersProject.program_data programs = 1;
inline int programs_stats::programs_size() const {
  return programs_.size();
}
inline void programs_stats::clear_programs() {
  programs_.Clear();
}
inline const ::HackersProject::program_data& programs_stats::programs(int index) const {
  return programs_.Get(index);
}
inline ::HackersProject::program_data* programs_stats::mutable_programs(int index) {
  return programs_.Mutable(index);
}
inline ::HackersProject::program_data* programs_stats::add_programs() {
  return programs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HackersProject::program_data >&
programs_stats::programs() const {
  return programs_;
}
inline ::google::protobuf::RepeatedPtrField< ::HackersProject::program_data >*
programs_stats::mutable_programs() {
  return &programs_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HackersProject

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HackersProject::program_data_effect_type>() {
  return ::HackersProject::program_data_effect_type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_program_2eproto__INCLUDED
